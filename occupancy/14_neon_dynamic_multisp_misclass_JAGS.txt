model {

  # Parameter argument priors
  mu_psi1   ~ dnorm(0,1)
  mu_phi    ~ dnorm(1.5,1)
  mu_gamma  ~ dnorm(-2,1)
  
  sd_psi1   ~ dunif(0, 10)
  sd_phi    ~ dunif(0, 10)
  sd_gamma  ~ dunif(0, 10)
  
  tau_psi1  <- pow(sd_psi1, -2)
  tau_phi   <- pow(sd_phi, -2)
  tau_gamma <- pow(sd_gamma, -2)
  #AIS think through why sd/tau should (not) be different for each parameter
  # I would suppose that tau for detection could be larger than tau for occupancy or survival
  # I also bet that tau for persistence/colonization would be small
  
  lambda_shape  ~ dgamma(5,1) 
  lambda_rate   ~ dgamma(1,1)
    
  for (k in 1:nspec) {
    e_psi1[k]  ~ dnorm(0,tau_psi1)
    e_phi[k]   ~ dnorm(0,tau_phi)
    e_gamma[k] ~ dnorm(0,tau_gamma)
  
    logit(psi1[k])  = mu_psi1 + e_psi1[k]
    logit(phi[k])   = mu_phi + e_phi[k]
    logit(gamma[k]) = mu_gamma + e_gamma[k]
    
    theta[k,1:nspec] ~ ddirch(alpha[k,1:nspec])
    
    for (l in 1:nyear) {
      for (i in 1:nsite) {
        for (j in 1:nsurv) {
          lambda[i,j,k,l] ~ dgamma(lambda_shape, lambda_rate) 
        }
      }
    }
  }
  
  # State model
  # Z dimensions: nsite, nspec, nyear
  for (i in 1:nsite) {
    for (k in 1:nspec) {
      Z[i,k,1] ~ dbern(psi1[k])
      for (l in 2:nyear) {
        Z[i,k,l]    ~ dbern(Z[i,k,l-1]*phi[k] + 
                        (1 - Z[i,k,l-1])*gamma[k]) 
      }
    }
  }

  # Observation model
  for (k in 1:nspec) {
        M[k, ] ~ dmulti(theta[k, ], n[k])
  }
  for (i in 1:nsite) {
    for (j in 1:nsurv) {
      for (k_prime in 1:nspec) {
        for (l in 1:nyear) {
          c_obs[i,j,k_prime,l] ~ dpois( sum(Z[i, ,l] * lambda[i,j, ,l] * theta[ ,k_prime])) 
        }
      }
    }
  }
  
  # Derived parameters
  for (k in 1:nspec) {
    psi[k,1] <- psi1[k]
    n.occ[k,1]  <- sum(Z[1:nsite,k,1])
    for (l in 2:nyear) {
      psi[k,l]        <- psi[k,l-1]*phi[k] + 
                          (1 - psi[k,l-1])*gamma[k] 
      n.occ[k,l]      <- sum(Z[1:nsite,k,l])
      growth[k,l]     <- psi[k,l]/psi[k,l-1] 
      turnover[k,l-1] <- (1 - psi[k,l-1])*gamma[k]/psi[k,l] 
    }
  }
} #model

